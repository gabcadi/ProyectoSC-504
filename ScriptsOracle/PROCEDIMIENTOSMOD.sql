--- CREAR CURSO ---
CREATE OR REPLACE PROCEDURE FIDE_CURSO_TB_INSERTAR_CURSO_SP (
    P_NOMBRE IN VARCHAR2,
    P_CREDITOS IN NUMBER,
    P_CUPOS IN NUMBER,
    P_ID_ESTADO IN NUMBER,
    P_ID_CURSO OUT NUMBER
) 
IS
BEGIN
    -- Llamar a la función para insertar el curso
    P_ID_CURSO := FIDE_CURSO_TB_INSERTAR_CURSO_FN(P_NOMBRE, P_CREDITOS, P_CUPOS, P_ID_ESTADO);
    
END;
/

--- ACTUALIZAR CURSO ---
CREATE OR REPLACE PROCEDURE FIDE_CURSO_TB_EDITAR_CURSO_SP (
    P_ID_CURSO IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_CREDITOS IN NUMBER,
    P_CUPOS IN NUMBER,
    P_RESULTADO OUT VARCHAR2
) 
IS
BEGIN
    -- Llamar a la función para editar el curso
    P_RESULTADO := FIDE_CURSO_TB_EDITAR_CURSO_FN (P_ID_CURSO, P_NOMBRE, P_CREDITOS, P_CUPOS);
END;
/
--- CAMBIAR ESTADO CURSOS ---
CREATE OR REPLACE PROCEDURE FIDE_CURSO_TB_CAMBIAR_ESTADO_CURSO_SP (
    P_ID_CURSO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
) 
IS
BEGIN
    -- Llamar a la función para cambiar el estado del curso a 0
    P_RESULTADO := FIDE_CURSO_TB_OCULTAR_CURSO_FN (P_ID_CURSO);
END;

/
--- REGISTRAR USUARIO ---
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_TB_REGISTRAR_USUARIO_SP (
    P_NOMBRE IN VARCHAR2,
    P_PRIMER_APELLIDO IN VARCHAR2,
    P_SEGUNDO_APELLIDO IN VARCHAR2,
    P_CORREO IN VARCHAR2,
    P_TIPO_USUARIO IN VARCHAR2,
    P_CODIGO_PAIS IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_ID_DIRECCION IN NUMBER,
    P_ID_ESPECIALIZACION IN NUMBER,
    P_ID_USUARIO OUT NUMBER
) 
IS
BEGIN
    -- Llamar a la función para registrar el USUARIO
    P_ID_USUARIO := FIDE_USUARIO_TB_REGISTRAR_USUARIO_FN(P_NOMBRE, P_PRIMER_APELLIDO, P_SEGUNDO_APELLIDO, 
                                            P_CORREO, P_TIPO_USUARIO, P_CODIGO_PAIS, 
                                            P_TELEFONO, P_ID_DIRECCION, P_ID_ESPECIALIZACION);
END;
/
--- EDITAR USUARIO ---
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_TB_EDITAR_USUARIO_SP (
    P_ID_USUARIO IN NUMBER,
    P_NOMBRE IN VARCHAR2,
    P_PRIMER_APELLIDO IN VARCHAR2,
    P_SEGUNDO_APELLIDO IN VARCHAR2,
    P_CORREO IN VARCHAR2,
    P_TIPO_USUARIO IN VARCHAR2,
    P_CODIGO_PAIS IN VARCHAR2,
    P_TELEFONO IN VARCHAR2,
    P_ID_DIRECCION IN NUMBER,
    P_ID_ESPECIALIZACION IN NUMBER,
    P_RESULTADO OUT VARCHAR2
) 
IS
BEGIN
    -- Llamar a la función para editar el USUARIO
    P_RESULTADO := FIDE_USUARIO_TB_EDITAR_USUARIO_FN (P_ID_USUARIO, P_NOMBRE, P_PRIMER_APELLIDO, 
                                       P_SEGUNDO_APELLIDO, P_CORREO, P_TIPO_USUARIO, 
                                       P_CODIGO_PAIS, P_TELEFONO, P_ID_DIRECCION, 
                                       P_ID_ESPECIALIZACION);
END;

/

--- AGREGAR AULA ---
CREATE OR REPLACE PROCEDURE FIDE_AULAS_TB_AGREGAR_AULA_SP (
    P_NOMBRE_AULA IN VARCHAR2,
    P_CAPACIDAD IN NUMBER,
    P_ID_ESTADO IN NUMBER,
    P_ID_AULA OUT NUMBER
) 
IS
BEGIN
    -- Llamar a la función para agregar el aula
    P_ID_AULA := FIDE_AULAS_TB_AGREGAR_AULA_FN(P_NOMBRE_AULA, P_CAPACIDAD, P_ID_ESTADO);
END;

/
--- AGREGAR UN NUEVO HORARIO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_TB_AGREGAR_HORARIO_SP (
    P_DIA_SEMANA IN VARCHAR2,
    P_TURNO IN VARCHAR2,
    P_ID_ESTADO IN NUMBER,
    P_ID_HORARIO OUT NUMBER
) 
IS
BEGIN
    -- Llamar a la función para agregar el horario
    P_ID_HORARIO := FIDE_HORARIO_TB_AGREGAR_HORARIO_FN(P_DIA_SEMANA, P_TURNO, P_ID_ESTADO);
END;

/
--- EDITAR HORARIO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_TB_EDITAR_HORARIO_SP(
    P_ID_HORARIO IN NUMBER,
    P_DIA_SEMANA IN VARCHAR2,
    P_TURNO IN VARCHAR2,
    P_ID_ESTADO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
) 
IS
BEGIN
    -- Llamar a la función para editar el horario
    P_RESULTADO := FIDE_HORARIO_TB_EDITAR_HORARIO_FN(P_ID_HORARIO, P_DIA_SEMANA, P_TURNO, P_ID_ESTADO);
END;
/

--- ELIMINAR USUARIO ---
CREATE OR REPLACE PROCEDURE FIDE_USUARIO_TB_ELIMINAR_USUARIO_SP (
    P_ID_USUARIO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para eliminar el usuario
    P_RESULTADO := FIDE_USUARIO_TB_ELIMINAR_USUARIO_FN(P_ID_USUARIO);
END;
/

--- ELIMINAR HORARIO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_TB_ELIMINAR_HORARIO_SP (
    P_ID_HORARIO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para eliminar el horario
    P_RESULTADO := FIDE_HORARIO_TB_ELIMINAR_HORARIO_FN(P_ID_HORARIO);
END;
/

--- CONSULTAR HORARIO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_TB_CONSULTAR_HORARIO_SP (
    P_RESULTADOS OUT SYS_REFCURSOR
)
IS
BEGIN
    -- Abrir el cursor para consultar los horarios
    OPEN P_RESULTADOS FOR
    SELECT ID_HORARIO, V_DIA_SEMANA, V_TURNO, ID_ESTADO
    FROM FIDE_HORARIO_TB;
END;
/

--- AGREGAR HORARIO MATRICULADO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_MATRICULADO_TB_INSERTAR_SP (
    P_ID_USUARIO IN NUMBER,
    P_ID_HORARIO IN NUMBER,
    P_ID_CURSO IN NUMBER,
    P_ID_HORARIO_MATRICULADO OUT NUMBER
)
IS
BEGIN
    -- Llamar a la función para agregar el horario matriculado
    P_ID_HORARIO_MATRICULADO := FIDE_HORARIO_MATRICULADO_TB_INSERTAR_FN(P_ID_USUARIO, P_ID_HORARIO, P_ID_CURSO);
END;
/

--- EDITAR HORARIO MATRICULADO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_MATRICULADO_TB_EDITAR_SP (
    P_ID_HORARIO_MATRICULADO IN NUMBER,
    P_ID_USUARIO IN NUMBER,
    P_ID_HORARIO IN NUMBER,
    P_ID_CURSO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para editar el horario matriculado
    P_RESULTADO := FIDE_HORARIO_MATRICULADO_TB_EDITAR_FN(P_ID_HORARIO_MATRICULADO, P_ID_USUARIO, P_ID_HORARIO, P_ID_CURSO);
END;
/

--- ELIMINAR HORARIO MATRICULADO ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_MATRICULADO_TB_ELIMINAR_SP (
    P_ID_HORARIO_MATRICULADO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para eliminar el horario matriculado
    P_RESULTADO := FIDE_HORARIO_MATRICULADO_TB_ELIMINAR_FN(P_ID_HORARIO_MATRICULADO);
END;
/

--- CONSULTAR HORARIOS MATRICULADOS ---
CREATE OR REPLACE PROCEDURE FIDE_HORARIO_MATRICULADO_TB_CONSULTAR_SP (
    P_RESULTADOS OUT SYS_REFCURSOR
)
IS
BEGIN
    -- Abrir el cursor para consultar los horarios matriculados
    OPEN P_RESULTADOS FOR
    SELECT ID_HORARIO_MATRICULADO, ID_USUARIO, ID_HORARIO, ID_CURSO
    FROM FIDE_HORARIO_MATRICULADO_TB;
END;
/

--- CONSULTAR CURSOS DISPONIBLES ---
CREATE OR REPLACE PROCEDURE FIDE_CURSO_TB_CONSULTAR_DISPONIBLES_SP (
    P_RESULTADOS OUT SYS_REFCURSOR
)
IS
BEGIN
    -- Abrir el cursor para consultar los cursos disponibles
    OPEN P_RESULTADOS FOR
    SELECT ID_CURSO, NOMBRE, CREDITOS, CUPOS
    FROM FIDE_CURSO_TB
    WHERE ID_ESTADO = 1; -- Asumiendo que 1 significa "disponible"
END;
/

--- AGREGAR ASIGNACIÓN DOCENTE ---
CREATE OR REPLACE PROCEDURE FIDE_ASIGNACION_DOCENTE_TB_INSERTAR_SP (
    P_ID_USUARIO IN NUMBER,
    P_ID_CURSO IN NUMBER,
    P_ID_HORARIO IN NUMBER,
    P_ID_ASIGNACION OUT NUMBER
)
IS
BEGIN
    -- Llamar a la función para agregar la asignación docente
    P_ID_ASIGNACION := FIDE_ASIGNACION_DOCENTE_TB_INSERTAR_FN(P_ID_USUARIO, P_ID_CURSO, P_ID_HORARIO);
END;
/

--- EDITAR ASIGNACIÓN DOCENTE ---
CREATE OR REPLACE PROCEDURE FIDE_ASIGNACION_DOCENTE_TB_EDITAR_SP (
    P_ID_ASIGNACION IN NUMBER,
    P_ID_USUARIO IN NUMBER,
    P_ID_CURSO IN NUMBER,
    P_ID_HORARIO IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para editar la asignación docente
    P_RESULTADO := FIDE_ASIGNACION_DOCENTE_TB_EDITAR_FN(P_ID_ASIGNACION, P_ID_USUARIO, P_ID_CURSO, P_ID_HORARIO);
END;
/

--- ELIMINAR ASIGNACIÓN DOCENTE ---
CREATE OR REPLACE PROCEDURE FIDE_ASIGNACION_DOCENTE_TB_ELIMINAR_SP (
    P_ID_ASIGNACION IN NUMBER,
    P_RESULTADO OUT VARCHAR2
)
IS
BEGIN
    -- Llamar a la función para eliminar la asignación docente
    P_RESULTADO := FIDE_ASIGNACION_DOCENTE_TB_ELIMINAR_FN(P_ID_ASIGNACION);
END;
/

--- CONSULTAR ASIGNACIONES DOCENTES ---
CREATE OR REPLACE PROCEDURE FIDE_ASIGNACION_DOCENTE_TB_CONSULTAR_SP (
    P_RESULTADOS OUT SYS_REFCURSOR
)
IS
BEGIN
    -- Abrir el cursor para consultar las asignaciones docentes
    OPEN P_RESULTADOS FOR
    SELECT ID_ASIGNACION, ID_USUARIO, ID_CURSO, ID_HORARIO
    FROM FIDE_ASIGNACION_DOCENTE_TB;
END;
/
